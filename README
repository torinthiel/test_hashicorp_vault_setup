Test of setting up vault with postgresql storage backend using ansible


Postgresql database for storage:
Default PostgreSQL container, with data stored on a docker volume. Not
initialised (except master user password), all initialisation is to be
performed via ansible.
* Start container with ./postgres_start.sh
* Stop container with ./postgres_stop.sh
* Remove the container and data volume with ./postgres_clean.sh

Ansible:
A pretty common centos image with ansible and dependencies installed.
The ansible folder from this repository is mountend on the image,
in /home/ansible/playbook.
* Build the image with ./ansible_build.sh
* Start with ./ansible_start.sh. Runs bash unless a command is given. Note that
  the container is auto-removed.

Run the playbook ansible/setup_vault.yaml to setup the database and docker
vault service on the requested machines. Use the command
ansible-playbook -i playbook/inventory playbook/setup_vault.yaml --ask-vault-pass

After Vault is initialized and unsealed you can run the playbook
ansible/configure_vault.yaml to apply required vault configuration.


Note that this is only a Proof-of-Concept, that largely depends on hardcoded IP
addresses, so the docker networks you have devined as well as order of starting
containers really matters.
